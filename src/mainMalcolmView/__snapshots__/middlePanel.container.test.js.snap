// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MalcolmMiddlePanel renders a container only if the no widget tag found for mainAttribute 1`] = `
<div
  className="MiddlePanelContainer-container-1"
  role="presentation"
  style={Object {}}
>
  <div
    className="MiddlePanelContainer-plainBackground-8"
    style={
      Object {
        "flexDirection": "column",
        "height": "100%",
        "justifyContent": "center",
        "textAlign": "center",
        "verticalAlign": "middle",
        "width": "100%",
      }
    }
  >
    <WithStyles(Typography)
      style={
        Object {
          "fontSize": "20pt",
        }
      }
    >
      Unable to display attribute "notAWidget"
    </WithStyles(Typography)>
    <WithStyles(Typography)
      style={
        Object {
          "fontSize": "20pt",
        }
      }
    >
      No valid widget tag found!
    </WithStyles(Typography)>
  </div>
</div>
`;

exports[`MalcolmMiddlePanel renders alarmed correctly 1`] = `
<div
  className="MiddlePanelContainer-container-1"
  role="presentation"
  style={Object {}}
>
  <div
    className="MiddlePanelContainer-layoutArea-2"
  >
    <Connect(WithTheme(Layout)) />
    <div
      className="MiddlePanelContainer-alarm-3"
      style={
        Object {
          "bottom": 12,
          "left": 389,
        }
      }
    >
      <WithTheme(AttributeAlarm)
        alarmSeverity={4}
      />
    </div>
    <div
      className="MiddlePanelContainer-paletteButton-5"
      style={
        Object {
          "bottom": 32,
          "right": 32,
        }
      }
    >
      <WithStyles(Button)
        color="secondary"
        data-cy="palettebutton"
        onClick={[Function]}
        variant="fab"
      >
        <pure(PaletteIcon)
          style={
            Object {
              "fontSize": "36px",
            }
          }
        />
      </WithStyles(Button)>
    </div>
    <div
      className="MiddlePanelContainer-autoLayoutButton-6"
      style={
        Object {
          "right": 29,
          "top": 12,
        }
      }
    >
      <WithStyles(Button)
        color="primary"
        disabled={true}
        onClick={[Function]}
        variant="raised"
      >
        Auto layout
      </WithStyles(Button)>
    </div>
    <div
      className="MiddlePanelContainer-autoLayoutButton-6"
      style={
        Object {
          "display": "flex",
          "left": 389,
          "top": 12,
        }
      }
    >
      <div
        style={
          Object {
            "padding": 4,
          }
        }
      >
        <WithStyles(Button)
          color="secondary"
          disabled={true}
          onClick={[Function]}
          style={
            Object {
              "height": "36px",
              "padding": 4,
              "width": "36px",
            }
          }
          variant="fab"
        >
          <pure(ZoomInIcon)
            style={
              Object {
                "fontSize": "24px",
              }
            }
          />
        </WithStyles(Button)>
      </div>
      <div
        style={
          Object {
            "padding": 4,
          }
        }
      >
        <WithStyles(Button)
          color="secondary"
          disabled={true}
          onClick={[Function]}
          style={
            Object {
              "height": "36px",
              "padding": 4,
              "width": "36px",
            }
          }
          variant="fab"
        >
          <pure(ZoomOutIcon)
            style={
              Object {
                "fontSize": "24px",
              }
            }
          />
        </WithStyles(Button)>
      </div>
      <div
        style={
          Object {
            "padding": 4,
          }
        }
      >
        <WithStyles(Button)
          color="secondary"
          disabled={true}
          onClick={[Function]}
          style={
            Object {
              "height": "36px",
              "padding": 4,
              "width": "36px",
            }
          }
          variant="fab"
        >
          <pure(ZoomOutMapIcon)
            style={
              Object {
                "fontSize": "24px",
              }
            }
          />
        </WithStyles(Button)>
      </div>
    </div>
  </div>
</div>
`;

exports[`MalcolmMiddlePanel renders an archive viewer pane if the mainAttribute is a "standard" attribute allowed type 1`] = `
<div
  className="MiddlePanelContainer-container-1"
  role="presentation"
  style={Object {}}
>
  <div
    className="MiddlePanelContainer-plainBackground-8"
  >
    <div
      className="MiddlePanelContainer-tableContainer-7"
      style={
        Object {
          "left": 360,
          "width": "calc(100% - 360px)",
        }
      }
    >
      <Connect(WithTheme(AttributeViewer))
        attributeName="health"
        blockName="test1"
        typeId="malcolm:core/StringMeta:1.0"
        widgetTag="widget:textupdate"
      />
    </div>
  </div>
</div>
`;

exports[`MalcolmMiddlePanel renders errored correctly 1`] = `
<div
  className="MiddlePanelContainer-container-1"
  role="presentation"
  style={Object {}}
>
  <div
    className="MiddlePanelContainer-layoutArea-2"
  >
    <Connect(WithTheme(Layout)) />
    <div
      className="MiddlePanelContainer-alarm-3"
      style={
        Object {
          "bottom": 12,
          "left": 389,
        }
      }
    >
      <WithTheme(AttributeAlarm)
        alarmSeverity={2}
      />
    </div>
    <div
      className="MiddlePanelContainer-paletteButton-5"
      style={
        Object {
          "bottom": 32,
          "right": 32,
        }
      }
    >
      <WithStyles(Button)
        color="secondary"
        data-cy="palettebutton"
        onClick={[Function]}
        variant="fab"
      >
        <pure(PaletteIcon)
          style={
            Object {
              "fontSize": "36px",
            }
          }
        />
      </WithStyles(Button)>
    </div>
    <div
      className="MiddlePanelContainer-autoLayoutButton-6"
      style={
        Object {
          "right": 29,
          "top": 12,
        }
      }
    >
      <WithStyles(Button)
        color="primary"
        disabled={true}
        onClick={[Function]}
        variant="raised"
      >
        Auto layout
      </WithStyles(Button)>
    </div>
    <div
      className="MiddlePanelContainer-autoLayoutButton-6"
      style={
        Object {
          "display": "flex",
          "left": 389,
          "top": 12,
        }
      }
    >
      <div
        style={
          Object {
            "padding": 4,
          }
        }
      >
        <WithStyles(Button)
          color="secondary"
          disabled={true}
          onClick={[Function]}
          style={
            Object {
              "height": "36px",
              "padding": 4,
              "width": "36px",
            }
          }
          variant="fab"
        >
          <pure(ZoomInIcon)
            style={
              Object {
                "fontSize": "24px",
              }
            }
          />
        </WithStyles(Button)>
      </div>
      <div
        style={
          Object {
            "padding": 4,
          }
        }
      >
        <WithStyles(Button)
          color="secondary"
          disabled={true}
          onClick={[Function]}
          style={
            Object {
              "height": "36px",
              "padding": 4,
              "width": "36px",
            }
          }
          variant="fab"
        >
          <pure(ZoomOutIcon)
            style={
              Object {
                "fontSize": "24px",
              }
            }
          />
        </WithStyles(Button)>
      </div>
      <div
        style={
          Object {
            "padding": 4,
          }
        }
      >
        <WithStyles(Button)
          color="secondary"
          disabled={true}
          onClick={[Function]}
          style={
            Object {
              "height": "36px",
              "padding": 4,
              "width": "36px",
            }
          }
          variant="fab"
        >
          <pure(ZoomOutMapIcon)
            style={
              Object {
                "fontSize": "24px",
              }
            }
          />
        </WithStyles(Button)>
      </div>
    </div>
  </div>
</div>
`;

exports[`MalcolmMiddlePanel renders layout correctly 1`] = `
<div
  className="MiddlePanelContainer-container-1"
  role="presentation"
  style={Object {}}
>
  <div
    className="MiddlePanelContainer-layoutArea-2"
  >
    <Connect(WithTheme(Layout)) />
    <div
      className="MiddlePanelContainer-alarm-3"
      style={
        Object {
          "bottom": 12,
          "left": 389,
        }
      }
    >
      <WithTheme(AttributeAlarm)
        alarmSeverity={0}
      />
    </div>
    <div
      className="MiddlePanelContainer-paletteButton-5"
      style={
        Object {
          "bottom": 32,
          "right": 32,
        }
      }
    >
      <WithStyles(Button)
        color="secondary"
        data-cy="palettebutton"
        onClick={[Function]}
        variant="fab"
      >
        <pure(PaletteIcon)
          style={
            Object {
              "fontSize": "36px",
            }
          }
        />
      </WithStyles(Button)>
    </div>
    <div
      className="MiddlePanelContainer-autoLayoutButton-6"
      style={
        Object {
          "right": 29,
          "top": 12,
        }
      }
    >
      <WithStyles(Button)
        color="primary"
        disabled={true}
        onClick={[Function]}
        variant="raised"
      >
        Auto layout
      </WithStyles(Button)>
    </div>
    <div
      className="MiddlePanelContainer-autoLayoutButton-6"
      style={
        Object {
          "display": "flex",
          "left": 389,
          "top": 12,
        }
      }
    >
      <div
        style={
          Object {
            "padding": 4,
          }
        }
      >
        <WithStyles(Button)
          color="secondary"
          disabled={true}
          onClick={[Function]}
          style={
            Object {
              "height": "36px",
              "padding": 4,
              "width": "36px",
            }
          }
          variant="fab"
        >
          <pure(ZoomInIcon)
            style={
              Object {
                "fontSize": "24px",
              }
            }
          />
        </WithStyles(Button)>
      </div>
      <div
        style={
          Object {
            "padding": 4,
          }
        }
      >
        <WithStyles(Button)
          color="secondary"
          disabled={true}
          onClick={[Function]}
          style={
            Object {
              "height": "36px",
              "padding": 4,
              "width": "36px",
            }
          }
          variant="fab"
        >
          <pure(ZoomOutIcon)
            style={
              Object {
                "fontSize": "24px",
              }
            }
          />
        </WithStyles(Button)>
      </div>
      <div
        style={
          Object {
            "padding": 4,
          }
        }
      >
        <WithStyles(Button)
          color="secondary"
          disabled={true}
          onClick={[Function]}
          style={
            Object {
              "height": "36px",
              "padding": 4,
              "width": "36px",
            }
          }
          variant="fab"
        >
          <pure(ZoomOutMapIcon)
            style={
              Object {
                "fontSize": "24px",
              }
            }
          />
        </WithStyles(Button)>
      </div>
    </div>
  </div>
</div>
`;

exports[`MalcolmMiddlePanel renders pending correctly 1`] = `
<div
  className="MiddlePanelContainer-container-1"
  role="presentation"
  style={Object {}}
>
  <div
    className="MiddlePanelContainer-layoutArea-2"
  >
    <Connect(WithTheme(Layout)) />
    <div
      className="MiddlePanelContainer-alarm-3"
      style={
        Object {
          "bottom": 12,
          "left": 389,
        }
      }
    >
      <WithTheme(AttributeAlarm)
        alarmSeverity={-1}
      />
    </div>
    <div
      className="MiddlePanelContainer-paletteButton-5"
      style={
        Object {
          "bottom": 32,
          "right": 32,
        }
      }
    >
      <WithStyles(Button)
        color="secondary"
        data-cy="palettebutton"
        onClick={[Function]}
        variant="fab"
      >
        <pure(PaletteIcon)
          style={
            Object {
              "fontSize": "36px",
            }
          }
        />
      </WithStyles(Button)>
    </div>
    <div
      className="MiddlePanelContainer-autoLayoutButton-6"
      style={
        Object {
          "right": 29,
          "top": 12,
        }
      }
    >
      <WithStyles(Button)
        color="primary"
        disabled={true}
        onClick={[Function]}
        variant="raised"
      >
        Auto layout
      </WithStyles(Button)>
    </div>
    <div
      className="MiddlePanelContainer-autoLayoutButton-6"
      style={
        Object {
          "display": "flex",
          "left": 389,
          "top": 12,
        }
      }
    >
      <div
        style={
          Object {
            "padding": 4,
          }
        }
      >
        <WithStyles(Button)
          color="secondary"
          disabled={true}
          onClick={[Function]}
          style={
            Object {
              "height": "36px",
              "padding": 4,
              "width": "36px",
            }
          }
          variant="fab"
        >
          <pure(ZoomInIcon)
            style={
              Object {
                "fontSize": "24px",
              }
            }
          />
        </WithStyles(Button)>
      </div>
      <div
        style={
          Object {
            "padding": 4,
          }
        }
      >
        <WithStyles(Button)
          color="secondary"
          disabled={true}
          onClick={[Function]}
          style={
            Object {
              "height": "36px",
              "padding": 4,
              "width": "36px",
            }
          }
          variant="fab"
        >
          <pure(ZoomOutIcon)
            style={
              Object {
                "fontSize": "24px",
              }
            }
          />
        </WithStyles(Button)>
      </div>
      <div
        style={
          Object {
            "padding": 4,
          }
        }
      >
        <WithStyles(Button)
          color="secondary"
          disabled={true}
          onClick={[Function]}
          style={
            Object {
              "height": "36px",
              "padding": 4,
              "width": "36px",
            }
          }
          variant="fab"
        >
          <pure(ZoomOutMapIcon)
            style={
              Object {
                "fontSize": "24px",
              }
            }
          />
        </WithStyles(Button)>
      </div>
    </div>
  </div>
</div>
`;

exports[`MalcolmMiddlePanel renders table correctly 1`] = `
<div
  className="MiddlePanelContainer-container-1"
  role="presentation"
  style={Object {}}
>
  <div
    className="MiddlePanelContainer-plainBackground-8"
  >
    <div
      className="MiddlePanelContainer-tableContainer-7"
      style={
        Object {
          "left": 360,
          "width": "calc(100% - 360px)",
        }
      }
    >
      <Connect(WithTheme(TableContainer))
        attributeName="layout"
        blockName="test1"
        footerItems={
          Array [
            <WithStyles(Tooltip)
              id="1"
              placement="right"
              title=""
          >
              <WithStyles(IconButton)
                  className="MiddlePanelContainer-button-9"
                  disableRipple={true}
              >
                  <WithTheme(AttributeAlarm)
                      alarmSeverity={0}
                  />
              </WithStyles(IconButton)>
          </WithStyles(Tooltip)>,
          ]
        }
      />
    </div>
  </div>
</div>
`;
