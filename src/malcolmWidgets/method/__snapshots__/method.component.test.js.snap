// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Method component buildIOcomponent returns null if no widget tag 1`] = `
<WithStyles(WidgetGroupExpander)
  expanded={true}
  groupName="Test"
  key="Test,Method"
>
  <div>
    <div
      className="MethodDetails-div-1"
      key="first"
    >
      <WithStyles(Tooltip)
        title="a test input"
      >
        <WithStyles(IconButton)
          className="MethodDetails-button-6"
          disableRipple={true}
          onClick={[Function]}
        >
          <WithTheme(AttributeAlarm)
            alarmSeverity={0}
          />
        </WithStyles(IconButton)>
      </WithStyles(Tooltip)>
      <WithStyles(Typography)
        className="MethodDetails-textName-2"
      >
        First input
      </WithStyles(Typography)>
      <div
        className="MethodDetails-controlContainer-3"
      >
        <WithStyles(WidgetTextInput)
          Error={false}
          Pending={false}
          Value="-"
          blurHandler={[Function]}
          continuousSend={true}
          focusHandler={[Function]}
          forceUpdate={false}
          setFlag={[Function]}
          submitEventHandler={[Function]}
        />
      </div>
    </div>
    <div
      className="MethodDetails-div-1"
      key="second"
    >
      <WithStyles(Tooltip)
        title="a test input"
      >
        <WithStyles(IconButton)
          className="MethodDetails-button-6"
          disableRipple={true}
          onClick={[Function]}
        >
          <WithTheme(AttributeAlarm)
            alarmSeverity={0}
          />
        </WithStyles(IconButton)>
      </WithStyles(Tooltip)>
      <WithStyles(Typography)
        className="MethodDetails-textName-2"
      >
        Second input
      </WithStyles(Typography)>
      <div
        className="MethodDetails-controlContainer-3"
      >
        <pure(BugReport)
          nativeColor="red"
        />
      </div>
    </div>
    <div
      className="MethodDetails-div-1"
    >
      <WithStyles(Tooltip)
        title=""
      >
        <WithStyles(IconButton)
          className="MethodDetails-button-6"
          disableRipple={true}
          onClick={[Function]}
        >
          <WithTheme(AttributeAlarm)
            alarmSeverity={0}
          />
        </WithStyles(IconButton)>
      </WithStyles(Tooltip)>
      <div
        className="MethodDetails-controlContainer-3"
      >
        <WithStyles(ButtonAction)
          clickAction={[Function]}
          disabled={false}
          method={true}
          text="Test"
        />
      </div>
    </div>
  </div>
</WithStyles(WidgetGroupExpander)>
`;

exports[`Method component renders correctly with default inputs 1`] = `
<WithStyles(WidgetGroupExpander)
  expanded={true}
  groupName="Test"
  key="Test,Method"
>
  <div>
    <div
      className="MethodDetails-div-1"
      key="first"
    >
      <WithStyles(Tooltip)
        title="a test input"
      >
        <WithStyles(IconButton)
          className="MethodDetails-button-6"
          disableRipple={true}
          onClick={[Function]}
        >
          <WithTheme(AttributeAlarm)
            alarmSeverity={0}
          />
        </WithStyles(IconButton)>
      </WithStyles(Tooltip)>
      <WithStyles(Typography)
        className="MethodDetails-textName-2"
      >
        First input
      </WithStyles(Typography)>
      <div
        className="MethodDetails-controlContainer-3"
      >
        <WithStyles(WidgetTextInput)
          Error={false}
          Pending={false}
          Value="1"
          blurHandler={[Function]}
          continuousSend={true}
          focusHandler={[Function]}
          forceUpdate={false}
          setFlag={[Function]}
          submitEventHandler={[Function]}
        />
      </div>
    </div>
    <div
      className="MethodDetails-div-1"
      key="second"
    >
      <WithStyles(Tooltip)
        title="a test input"
      >
        <WithStyles(IconButton)
          className="MethodDetails-button-6"
          disableRipple={true}
          onClick={[Function]}
        >
          <WithTheme(AttributeAlarm)
            alarmSeverity={0}
          />
        </WithStyles(IconButton)>
      </WithStyles(Tooltip)>
      <WithStyles(Typography)
        className="MethodDetails-textName-2"
      >
        Second input
      </WithStyles(Typography)>
      <div
        className="MethodDetails-controlContainer-3"
      >
        <WithStyles(WidgetTextInput)
          Error={false}
          Pending={false}
          Value="two"
          blurHandler={[Function]}
          continuousSend={true}
          focusHandler={[Function]}
          forceUpdate={false}
          setFlag={[Function]}
          submitEventHandler={[Function]}
        />
      </div>
    </div>
    <div
      className="MethodDetails-div-1"
    >
      <WithStyles(Tooltip)
        title=""
      >
        <WithStyles(IconButton)
          className="MethodDetails-button-6"
          disableRipple={true}
          onClick={[Function]}
        >
          <WithTheme(AttributeAlarm)
            alarmSeverity={0}
          />
        </WithStyles(IconButton)>
      </WithStyles(Tooltip)>
      <div
        className="MethodDetails-controlContainer-3"
      >
        <WithStyles(ButtonAction)
          clickAction={[Function]}
          disabled={false}
          method={true}
          text="Test"
        />
      </div>
    </div>
  </div>
</WithStyles(WidgetGroupExpander)>
`;

exports[`Method component renders correctly with empty inputs 1`] = `
<WithStyles(WidgetGroupExpander)
  expanded={true}
  groupName="Test"
  key="Test,Method"
>
  <div>
    <div
      className="MethodDetails-div-1"
      key="first"
    >
      <WithStyles(Tooltip)
        title="a test input"
      >
        <WithStyles(IconButton)
          className="MethodDetails-button-6"
          disableRipple={true}
          onClick={[Function]}
        >
          <WithTheme(AttributeAlarm)
            alarmSeverity={0}
          />
        </WithStyles(IconButton)>
      </WithStyles(Tooltip)>
      <WithStyles(Typography)
        className="MethodDetails-textName-2"
      >
        First input
      </WithStyles(Typography)>
      <div
        className="MethodDetails-controlContainer-3"
      >
        <WithStyles(WidgetTextInput)
          Error={false}
          Pending={false}
          Value="-"
          blurHandler={[Function]}
          continuousSend={true}
          focusHandler={[Function]}
          forceUpdate={false}
          setFlag={[Function]}
          submitEventHandler={[Function]}
        />
      </div>
    </div>
    <div
      className="MethodDetails-div-1"
      key="second"
    >
      <WithStyles(Tooltip)
        title="a test input"
      >
        <WithStyles(IconButton)
          className="MethodDetails-button-6"
          disableRipple={true}
          onClick={[Function]}
        >
          <WithTheme(AttributeAlarm)
            alarmSeverity={0}
          />
        </WithStyles(IconButton)>
      </WithStyles(Tooltip)>
      <WithStyles(Typography)
        className="MethodDetails-textName-2"
      >
        Second input
      </WithStyles(Typography)>
      <div
        className="MethodDetails-controlContainer-3"
      >
        <WithStyles(WidgetTextInput)
          Error={false}
          Pending={false}
          Value="-"
          blurHandler={[Function]}
          continuousSend={true}
          focusHandler={[Function]}
          forceUpdate={false}
          setFlag={[Function]}
          submitEventHandler={[Function]}
        />
      </div>
    </div>
    <div
      className="MethodDetails-div-1"
    >
      <WithStyles(Tooltip)
        title=""
      >
        <WithStyles(IconButton)
          className="MethodDetails-button-6"
          disableRipple={true}
          onClick={[Function]}
        >
          <WithTheme(AttributeAlarm)
            alarmSeverity={0}
          />
        </WithStyles(IconButton)>
      </WithStyles(Tooltip)>
      <div
        className="MethodDetails-controlContainer-3"
      >
        <WithStyles(ButtonAction)
          clickAction={[Function]}
          disabled={false}
          method={true}
          text="Test"
        />
      </div>
    </div>
  </div>
</WithStyles(WidgetGroupExpander)>
`;

exports[`Method component renders correctly with existing input values 1`] = `
<WithStyles(WidgetGroupExpander)
  expanded={true}
  groupName="Test"
  key="Test,Method"
>
  <div>
    <div
      className="MethodDetails-div-1"
      key="first"
    >
      <WithStyles(Tooltip)
        title="a test input"
      >
        <WithStyles(IconButton)
          className="MethodDetails-button-6"
          disableRipple={true}
          onClick={[Function]}
        >
          <WithTheme(AttributeAlarm)
            alarmSeverity={0}
          />
        </WithStyles(IconButton)>
      </WithStyles(Tooltip)>
      <WithStyles(Typography)
        className="MethodDetails-textName-2"
      >
        First input
      </WithStyles(Typography)>
      <div
        className="MethodDetails-controlContainer-3"
      >
        <WithStyles(WidgetTextInput)
          Error={false}
          Pending={false}
          Value="3"
          blurHandler={[Function]}
          continuousSend={true}
          focusHandler={[Function]}
          forceUpdate={false}
          setFlag={[Function]}
          submitEventHandler={[Function]}
        />
      </div>
    </div>
    <div
      className="MethodDetails-div-1"
      key="second"
    >
      <WithStyles(Tooltip)
        title="a test input"
      >
        <WithStyles(IconButton)
          className="MethodDetails-button-6"
          disableRipple={true}
          onClick={[Function]}
        >
          <WithTheme(AttributeAlarm)
            alarmSeverity={0}
          />
        </WithStyles(IconButton)>
      </WithStyles(Tooltip)>
      <WithStyles(Typography)
        className="MethodDetails-textName-2"
      >
        Second input
      </WithStyles(Typography)>
      <div
        className="MethodDetails-controlContainer-3"
      >
        <WithStyles(WidgetTextInput)
          Error={false}
          Pending={false}
          Value="four"
          blurHandler={[Function]}
          continuousSend={true}
          focusHandler={[Function]}
          forceUpdate={false}
          setFlag={[Function]}
          submitEventHandler={[Function]}
        />
      </div>
    </div>
    <div
      className="MethodDetails-div-1"
    >
      <WithStyles(Tooltip)
        title=""
      >
        <WithStyles(IconButton)
          className="MethodDetails-button-6"
          disableRipple={true}
          onClick={[Function]}
        >
          <WithTheme(AttributeAlarm)
            alarmSeverity={0}
          />
        </WithStyles(IconButton)>
      </WithStyles(Tooltip)>
      <div
        className="MethodDetails-controlContainer-3"
      >
        <WithStyles(ButtonAction)
          clickAction={[Function]}
          disabled={false}
          method={true}
          text="Test"
        />
      </div>
    </div>
  </div>
</WithStyles(WidgetGroupExpander)>
`;

exports[`Method component renders correctly with no inputs or outputs 1`] = `
<div
  className="MethodDetails-div-1"
>
  <WithStyles(Tooltip)
    title=""
  >
    <WithStyles(IconButton)
      className="MethodDetails-button-6"
      disableRipple={true}
      onClick={[Function]}
    >
      <WithTheme(AttributeAlarm)
        alarmSeverity={0}
      />
    </WithStyles(IconButton)>
  </WithStyles(Tooltip)>
  <div
    className="MethodDetails-controlContainer-3"
  >
    <WithStyles(ButtonAction)
      clickAction={[Function]}
      disabled={false}
      method={true}
      text="Test"
    />
  </div>
</div>
`;

exports[`Method component renders correctly with return value 1`] = `
<WithStyles(WidgetGroupExpander)
  expanded={true}
  groupName="Test"
  key="Test,Method"
>
  <div>
    <div
      className="MethodDetails-div-1"
      key="first"
    >
      <WithStyles(Tooltip)
        title="a test input"
      >
        <WithStyles(IconButton)
          className="MethodDetails-button-6"
          disableRipple={true}
          onClick={[Function]}
        >
          <WithTheme(AttributeAlarm)
            alarmSeverity={0}
          />
        </WithStyles(IconButton)>
      </WithStyles(Tooltip)>
      <WithStyles(Typography)
        className="MethodDetails-textName-2"
      >
        First input
      </WithStyles(Typography)>
      <div
        className="MethodDetails-controlContainer-3"
      >
        <WithStyles(WidgetTextInput)
          Error={false}
          Pending={false}
          Value="-"
          blurHandler={[Function]}
          continuousSend={true}
          focusHandler={[Function]}
          forceUpdate={false}
          setFlag={[Function]}
          submitEventHandler={[Function]}
        />
      </div>
    </div>
    <div
      className="MethodDetails-div-1"
      key="second"
    >
      <WithStyles(Tooltip)
        title="a test input"
      >
        <WithStyles(IconButton)
          className="MethodDetails-button-6"
          disableRipple={true}
          onClick={[Function]}
        >
          <WithTheme(AttributeAlarm)
            alarmSeverity={0}
          />
        </WithStyles(IconButton)>
      </WithStyles(Tooltip)>
      <WithStyles(Typography)
        className="MethodDetails-textName-2"
      >
        Second input
      </WithStyles(Typography)>
      <div
        className="MethodDetails-controlContainer-3"
      >
        <WithStyles(WidgetTextInput)
          Error={false}
          Pending={false}
          Value="-"
          blurHandler={[Function]}
          continuousSend={true}
          focusHandler={[Function]}
          forceUpdate={false}
          setFlag={[Function]}
          submitEventHandler={[Function]}
        />
      </div>
    </div>
    <div
      className="MethodDetails-div-1"
    >
      <WithStyles(Tooltip)
        title=""
      >
        <WithStyles(IconButton)
          className="MethodDetails-button-6"
          disableRipple={true}
          onClick={[Function]}
        >
          <WithTheme(AttributeAlarm)
            alarmSeverity={0}
          />
        </WithStyles(IconButton)>
      </WithStyles(Tooltip)>
      <div
        className="MethodDetails-controlContainer-3"
      >
        <WithStyles(ButtonAction)
          clickAction={[Function]}
          disabled={false}
          method={true}
          text="Test"
        />
      </div>
    </div>
    <div>
      <WithStyles(Typography)
        className="MethodDetails-textName-2"
      >
        Last Return:
      </WithStyles(Typography)>
      <WithStyles(Divider) />
      <div
        className="MethodDetails-div-1"
        key="first"
      >
        <WithStyles(Tooltip)>
          <WithStyles(IconButton)
            className="MethodDetails-button-6"
            disableRipple={true}
            onClick={[Function]}
          >
            <WithTheme(AttributeAlarm)
              alarmSeverity={0}
            />
          </WithStyles(IconButton)>
        </WithStyles(Tooltip)>
        <WithStyles(Typography)
          className="MethodDetails-textName-2"
        >
          First output
        </WithStyles(Typography)>
        <div
          className="MethodDetails-controlContainer-3"
        >
          <WithStyles(WidgetLED)
            LEDState={true}
            colorBorder="#7986cb"
            colorCenter="#7986cb"
          />
        </div>
      </div>
      <div
        className="MethodDetails-div-1"
        key="second"
      >
        <WithStyles(Tooltip)>
          <WithStyles(IconButton)
            className="MethodDetails-button-6"
            disableRipple={true}
            onClick={[Function]}
          >
            <WithTheme(AttributeAlarm)
              alarmSeverity={0}
            />
          </WithStyles(IconButton)>
        </WithStyles(Tooltip)>
        <WithStyles(Typography)
          className="MethodDetails-textName-2"
        >
          Second output
        </WithStyles(Typography)>
        <div
          className="MethodDetails-controlContainer-3"
        >
          <WithStyles(WidgetTextUpdate)
            Text="done"
          />
        </div>
      </div>
    </div>
  </div>
</WithStyles(WidgetGroupExpander)>
`;

exports[`Method component renders correctly without return value 1`] = `
<WithStyles(WidgetGroupExpander)
  expanded={true}
  groupName="Test"
  key="Test,Method"
>
  <div>
    <div
      className="MethodDetails-div-1"
      key="first"
    >
      <WithStyles(Tooltip)
        title="a test input"
      >
        <WithStyles(IconButton)
          className="MethodDetails-button-6"
          disableRipple={true}
          onClick={[Function]}
        >
          <WithTheme(AttributeAlarm)
            alarmSeverity={0}
          />
        </WithStyles(IconButton)>
      </WithStyles(Tooltip)>
      <WithStyles(Typography)
        className="MethodDetails-textName-2"
      >
        First input
      </WithStyles(Typography)>
      <div
        className="MethodDetails-controlContainer-3"
      >
        <WithStyles(WidgetTextInput)
          Error={false}
          Pending={false}
          Value="3"
          blurHandler={[Function]}
          continuousSend={true}
          focusHandler={[Function]}
          forceUpdate={false}
          setFlag={[Function]}
          submitEventHandler={[Function]}
        />
      </div>
    </div>
    <div
      className="MethodDetails-div-1"
      key="second"
    >
      <WithStyles(Tooltip)
        title="a test input"
      >
        <WithStyles(IconButton)
          className="MethodDetails-button-6"
          disableRipple={true}
          onClick={[Function]}
        >
          <WithTheme(AttributeAlarm)
            alarmSeverity={0}
          />
        </WithStyles(IconButton)>
      </WithStyles(Tooltip)>
      <WithStyles(Typography)
        className="MethodDetails-textName-2"
      >
        Second input
      </WithStyles(Typography)>
      <div
        className="MethodDetails-controlContainer-3"
      >
        <WithStyles(WidgetTextInput)
          Error={false}
          Pending={false}
          Value="four"
          blurHandler={[Function]}
          continuousSend={true}
          focusHandler={[Function]}
          forceUpdate={false}
          setFlag={[Function]}
          submitEventHandler={[Function]}
        />
      </div>
    </div>
    <div
      className="MethodDetails-div-1"
    >
      <WithStyles(Tooltip)
        title=""
      >
        <WithStyles(IconButton)
          className="MethodDetails-button-6"
          disableRipple={true}
          onClick={[Function]}
        >
          <WithTheme(AttributeAlarm)
            alarmSeverity={0}
          />
        </WithStyles(IconButton)>
      </WithStyles(Tooltip)>
      <div
        className="MethodDetails-controlContainer-3"
      >
        <WithStyles(ButtonAction)
          clickAction={[Function]}
          disabled={false}
          method={true}
          text="Test"
        />
      </div>
    </div>
  </div>
</WithStyles(WidgetGroupExpander)>
`;
